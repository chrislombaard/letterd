generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PRISMA_DATABASE_URL")  // ← use Accelerate here
  directUrl = env("DIRECT_URL")           // ← raw Postgres for migrate
}

enum PostStatus {
  DRAFT
  SCHEDULED
  SENDING
  SENT
}

enum SubscriberStatus {
  ACTIVE
  UNSUBSCRIBED
  BOUNCED
}

enum DeliveryStatus {
  PENDING
  IN_PROGRESS
  SENT
  FAILED
}

model Subscriber {
  id        String           @id @default(cuid())
  email     String           @unique
  status    SubscriberStatus @default(ACTIVE)
  createdAt DateTime         @default(now())
  
  deliveries Delivery[]
}


model Post {
  id          String     @id @default(cuid())
  title       String
  subject     String
  bodyHtml    String
  status      PostStatus @default(DRAFT)
  scheduledAt DateTime?
  createdAt   DateTime   @default(now())

  deliveries  Delivery[]

  @@index([status, scheduledAt])
}

model Delivery {
  id           String         @id @default(cuid())
  postId       String
  subscriberId String
  status       DeliveryStatus @default(PENDING)
  error        String?
  createdAt    DateTime       @default(now())
  sentAt       DateTime?

  post         Post           @relation(fields: [postId], references: [id], onDelete: Cascade)
  subscriber   Subscriber     @relation(fields: [subscriberId], references: [id], onDelete: Cascade)

  @@unique([postId, subscriberId])
  @@index([status, createdAt])
}

model CronExecution {
  id        Int       @id @default(autoincrement())
  key       String    @unique // e.g. "tick:2025-09-22T13:00:00Z"
  createdAt DateTime  @default(now())
}

model Task {
  id        String   @id @default(cuid())
  type      String
  status    String   @default("pending") // pending|running|done|failed
  runAt     DateTime @default(now())
  attempts  Int      @default(0)
  payload   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([status, runAt])
}
